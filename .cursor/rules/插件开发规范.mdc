---
description: 
globs: 
alwaysApply: false
---
# 插件开发规范

本规范适用于本项目所有插件的开发、审核、分发与维护。

## 1. 插件接口规范
- 插件必须实现统一的 Plugin 接口（详见 [Go-插件系统规范.md](mdc:docs/Go-插件系统规范.md)）。
- 必须实现 Name、Version、Execute、Config、Dependencies 等方法。

## 2. 目录结构规范
- 插件目录结构建议：
  ```
  plugin-name/
  ├── plugin.go         # 插件实现
  ├── config.go         # 配置定义
  ├── types.go          # 类型定义
  ├── utils/            # 工具函数
  ├── tests/            # 测试文件
  └── README.md         # 文档说明
  ```
- 包名小写，结构体/方法大驼峰。

## 3. 命名与注释规范
- 包名小写，接口/结构体/方法大驼峰。
- 关键逻辑、接口、结构体、包均需注释。

## 4. 配置与依赖管理
- 配置项需支持热更新、验证、回滚。
- 依赖需声明版本，避免冲突。
- 配置、依赖变更需有日志和审计。

## 5. 错误与日志规范
- 错误码、错误信息规范，便于追踪。
- 日志需结构化，包含插件名、版本、上下文信息。
- 关键操作、异常、状态变更必须有日志。

## 6. 安全与权限
- 插件执行需在沙箱环境，限制资源访问。
- 所有API请求需认证、授权，敏感数据加密传输。
- 插件需通过安全扫描，无高危漏洞。

## 7. 生命周期与状态管理
- 插件有完整的生命周期（安装、启用、禁用、升级、卸载）。
- 状态转换需合法，支持状态持久化与恢复。

## 8. 打包与文档
- 插件包内必须有 README.md、CHANGELOG.md、配置模板等。
- 文档需详细说明功能、安装、配置、使用、升级、注意事项。

## 9. 审核与分发
- 插件需通过后台审核，审核内容包括功能、接口、安全、依赖、文档等。
- 审核通过后统一分发，用户后台可下载安装、启用、禁用。

## 10. 绑定与卡密机制
- 插件安装需输入卡密，后台校验卡密合法性、类型、状态。
- 插件与账号/服务器唯一绑定，后台可限制绑定数量。
- 插件启动时校验绑定信息，未授权或超限则拒绝服务。

> 详细接口、数据结构、流程请参考 [插件-卡密与绑定机制开发规范.md](mdc:docs/插件-卡密与绑定机制开发规范.md) 及 [Go-插件系统规范.md](mdc:docs/Go-插件系统规范.md)。

